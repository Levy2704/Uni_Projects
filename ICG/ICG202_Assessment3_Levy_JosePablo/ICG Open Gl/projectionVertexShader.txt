#version 330 core 

layout(location=0) in vec3 aPos;
layout(location=1) in vec3 aColour;
layout(location=2) in vec2 aTexCoord;

out vec4 vertexColour;
out vec2 texCoord;

uniform mat4 model; // model to world space
uniform mat4 view; // world to camera space
uniform mat4 projection; // camera to NDC coordinates

void main()
{

//note: matrix multiplication goes right to left
gl_Position= projection*view*model*vec4(aPos,1.0);

vertexColour= vec4(aColour,1.0);
texCoord= aTexCoord;

}